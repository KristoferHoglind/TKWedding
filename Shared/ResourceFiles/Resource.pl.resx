<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="faq_bouquet" xml:space="preserve">
    <value>Kto przygotował bukiet?</value>
  </data>
  <data name="faq_bouquet_location" xml:space="preserve">
    <value>w Jönköping</value>
  </data>
  <data name="faq_cake" xml:space="preserve">
    <value>Kto zrobił tort?</value>
  </data>
  <data name="faq_catchbouqet" xml:space="preserve">
    <value>Kto złapał bukiet ślubny?</value>
  </data>
  <data name="faq_confectionery" xml:space="preserve">
    <value>ciastkarnia</value>
  </data>
  <data name="faq_confectionery_location" xml:space="preserve">
    <value>w Vetlandzie</value>
  </data>
  <data name="faq_contact_ex" xml:space="preserve">
    <value>były</value>
  </data>
  <data name="faq_contact_newlyweds" xml:space="preserve">
    <value>Jak mogę skontaktować się z nowożeńcami?</value>
  </data>
  <data name="faq_drunkfirst" xml:space="preserve">
    <value>Kto pierwszy się upił?</value>
  </data>
  <data name="faq_flowers" xml:space="preserve">
    <value>Kwiatki Mimosa</value>
  </data>
  <data name="faq_food" xml:space="preserve">
    <value>Skąd zostało zamówione jedzenie?</value>
  </data>
  <data name="faq_food_order" xml:space="preserve">
    <value>Jedzenie zamówiono w Citygross Värnamo</value>
  </data>
  <data name="faq_location" xml:space="preserve">
    <value>Gdzie odbyło się przyjęcie weselne?</value>
  </data>
  <data name="faq_location_bor" xml:space="preserve">
    <value>w Bor, Värnamo</value>
  </data>
  <data name="faq_photograph" xml:space="preserve">
    <value>Kto był oficjalnym fotografem ślubnym?</value>
  </data>
  <data name="faq_photographer" xml:space="preserve">
    <value>Fotograf</value>
  </data>
  <data name="faq_photographer_location" xml:space="preserve">
    <value>z Värnamo</value>
  </data>
  <data name="faq_subtitle" xml:space="preserve">
    <value>Pytania, odpowiedzi i inne ciekawostki dotyczące ślubu</value>
  </data>
  <data name="faq_title" xml:space="preserve">
    <value>Często zadawane pytania (FAQ)</value>
  </data>
  <data name="faq_toastmasters" xml:space="preserve">
    <value>Kim byli toastmasters?</value>
  </data>
  <data name="gallery_movie_text1" xml:space="preserve">
    <value>Jeśli nagrałeś więcej filmów niż tych, które zostały tutaj przesłane; skontaktuj się z parą ślubną, aby przesłać je również tutaj.</value>
  </data>
  <data name="gallery_movie_title" xml:space="preserve">
    <value>Filmy nagrane w trakcie wesela</value>
  </data>
  <data name="gallery_picture_text1" xml:space="preserve">
    <value>Możesz pobrać swoje ulubione zdjęcia do użytku prywatnego. Zdjęcia wykonane przez Magdalenę (fotograf ślubny) i Mariusza mają wysoką rozdzielczość i dlatego świetnie nadają się do druku.</value>
  </data>
  <data name="gallery_picture_text2" xml:space="preserve">
    <value>Jeśli zrobiłeś więcej zdjęć niż te, które są tutaj przesłane; skontaktuj się z parą ślubną, aby przesłać je również tutaj.</value>
  </data>
  <data name="gallery_picture_title" xml:space="preserve">
    <value>Zdjęcia zrobione w trakcie przyjęcia weselnego</value>
  </data>
  <data name="gallery_subtitle" xml:space="preserve">
    <value>Filmy i zdjęcia z wesela</value>
  </data>
  <data name="gallery_title" xml:space="preserve">
    <value>Galeria</value>
  </data>
  <data name="home_list_endtext" xml:space="preserve">
    <value>Prosimy o kontakt z nowożeńcami, jeśli posiadasz więcej materiałów, które można tu załadować</value>
  </data>
  <data name="home_list_info" xml:space="preserve">
    <value>Po lewej stronie znajdziesz:</value>
  </data>
  <data name="home_list_item1" xml:space="preserve">
    <value>Galeria ze zdjęciami i filmami</value>
  </data>
  <data name="home_list_item2" xml:space="preserve">
    <value>Playlisty Spotify</value>
  </data>
  <data name="home_list_item3" xml:space="preserve">
    <value>Ciekawa informacja o weselu</value>
  </data>
  <data name="home_subtitle" xml:space="preserve">
    <value>Witamy na oficjalnej stronie głównej poświęconej weselu</value>
  </data>
  <data name="home_title" xml:space="preserve">
    <value>Ślub Tiffani i Krzysztofa 2023</value>
  </data>
  <data name="music_subtitle" xml:space="preserve">
    <value>Playlisty z wesela</value>
  </data>
  <data name="music_title" xml:space="preserve">
    <value>Muzyka</value>
  </data>
  <data name="nav_faq" xml:space="preserve">
    <value>FAQ</value>
  </data>
  <data name="nav_gallery" xml:space="preserve">
    <value>Galeria</value>
  </data>
  <data name="nav_home" xml:space="preserve">
    <value>Strona Głowna</value>
  </data>
  <data name="nav_music" xml:space="preserve">
    <value>Muzyka</value>
  </data>
  <data name="selector_lang" xml:space="preserve">
    <value>Język</value>
  </data>
</root>